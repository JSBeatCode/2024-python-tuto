# 함수 호출 시 *args는 여러 개의 위치 인수를 튜플로 묶어 전달받습니다.
def foo(*args):
    # 전달받은 위치 인수들이 튜플로 저장되어 args 변수에 바인딩됩니다.
    print(args)

# foo 함수 호출: 위치 인수 1, 2, 3 전달
foo(1, 2, 3)  # 출력: (1, 2, 3)

# foo 함수 호출: 위치 인수 1, 2, 3, 4 전달
foo(1, 2, 3, 4)  # 출력: (1, 2, 3, 4)

print("-------------------------------------------")

# **kwargs는 여러 개의 키워드 인수를 딕셔너리로 묶어 전달받습니다.
def foo1(**kwargs):
    # 전달받은 키워드 인수들이 딕셔너리로 저장되어 kwargs 변수에 바인딩됩니다.
    print(kwargs)

# foo1 함수 호출: 키워드 인수 a=1, b=2, c=3 전달
foo1(a=1, b=2, c=3)  # 출력: {'a': 1, 'b': 2, 'c': 3}

print("-------------------------------------------")

# *args와 **kwargs를 함께 사용하는 함수 예제
def foo3(*args, **kwrgs):
    # 위치 인수 출력
    print(args)
    # 키워드 인수 출력
    print(kwrgs)

# foo3 함수 호출: 위치 인수와 키워드 인수 전달
foo3(1, 2, 3, a=1, b=2, c=3)
# 출력:
# (1, 2, 3)
# {'a': 1, 'b': 2, 'c': 3}

print("-------------------------------------------")

# 데이터 구조(List, Tuple 등)의 요소를 함수에 개별적으로 전달하는 방법
def foo4(a, b, c):
    # 위치 인수로 전달받은 a, b, c 출력
    print(a, b, c)
    print(a)
    print(b)
    print(c)

# 리스트의 요소를 개별적으로 추출하여 함수에 전달
data = [1, 2, 3]
foo4(data[0], data[1], data[2])  # 출력: 1 2 3

print("----------")

# 리스트 전체를 단일 위치 인수로 전달
def foo5(a):
    # a는 리스트 전체를 받음
    print(a)

data1 = [1, 2, 3]
print(data1)  # 출력: [1, 2, 3]
foo5(data1)  # 출력: [1, 2, 3]

print("----------")

# 리스트 데이터를 *를 사용하여 개별 인수로 언패킹하여 전달
def foo6(a, b, c):
    # 위치 인수로 언패킹된 a, b, c 출력
    print(a, b, c)
    print(a)
    print(b)
    print(c)

data3 = [1, 2, 3]
foo6(*data3)  # 리스트를 언패킹하여 전달, 출력: 1 2 3

print("-------------------------------------------")

# **kwargs를 이용해 키워드 인수를 받는 함수
def foo7(**kwargs):
    # 전달받은 키워드 인수 출력
    print(kwargs)

# 키워드 인수 전달
foo7(a=1, b=2)  # 출력: {'a': 1, 'b': 2}

# 딕셔너리를 언패킹하여 키워드 인수로 전달
params = {'c': 3, 'd': 4}
foo7(**params)  # 출력: {'c': 3, 'd': 4}
